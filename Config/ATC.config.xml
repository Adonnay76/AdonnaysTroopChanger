<?xml version="1.0" encoding="utf-8"?>
<!-- DISCALIMER!
	 WHATEVER YOU DO HERE IS AT YOUR OWN RISK. I TAKE NO - NONE WHATSOEVER - RESPONSIBILITY FOR THE 
	 SAFETY OF YOUR SAVEGAME. YOUR SAVEGAME MAY BLOW UP... DISINTEGRATE... VANISH... AND TAKE YOUR 
	 WHOLE COMPUTER WITH IT. 
	
	 YOU HAVE BEEN WARNED.
	 
	 Version infromation for ATC.config.xml
	 The 2nd digit in the ATC version indicates a structural change to the ATC.config.xml. If that 
	 number gets raised you need to check the provided EXAMPLE_ATC.config.xml for changes!
	 Example: ATC version 1.1.5   needs ATC.config.xml version 1.1.x 
	          ATC version 1.1.432 needs ATC.config.xml version 1.1.x 
			  ATC version 1.2.3   needs ATC.config.xml version 1.2.x
	 
	 
	 VERSION 1.2.0, compatible with ATC versions 1.2.x
	 * Completely new file handling, especially targeted for modders and players that don't want to mess
	   with XML files!
	 * Scans Bannerlord's /Module folder for files namend ATC.modconfig.xml and integrates them into 
	   one large troop replacement configuration. Now each mod can provide their own configuration file!
	 * THE SCAN OPTION HAS TO BE MANUALLY ENABLED by setting the new tag <EnableModScan> to true! I will
	   try not to release any version where this is enabled by default! 
	 * If one or more ATC.modconfig.xml are found ATC will generate a new config file ATC.config.merged.xml.
	   Check this file if you want to see what the game uses as its current configuration.
	 * ATC.debug.log expanded with more information (config file loading, merging etc.)
	 * The Chael Nad'ra will be separated and bring their own configuration file ChaelNadra_ATC.modconfig.xml.
	   
	 
	 EXAMPLE_ATC.config.xml is therefore OBSOLETE and will be removed in future versions. ATC itself will
	 include a central configuration file ATC.config.xml that should only contain only central configuration
	 items such as debug information and the above mentioned EnableModScan flag.
	   
	 
	 VERSION 1.1.5, compatible with ATC versions 1.1.x
	 Changes to 1.1.0:
	 * No structural changes, no adaptations needed
	 * Debuginformation <show_percentage> for RNG Value used has been removed as the RNG seems to work 
	   fine now. The tags are still in the file but have no effect anymore.
	 
	 
	 Description:
	 <debugInfo>
	 <troop_replacement> Puts a log dump into ATC.debug.log when a <source_troop> has been replaced
	                     by a <target_troop>
	 <playeronly_flag>   Puts a log entry into /Config/ATC.debug.log when a <target_troop> has been
	                     reverted back to <source_troop> to prevent the AI from recruiting it
						 
	 
	 <source_troops> 
	 Source troops are all the native BasicTroop variants taken from spcultures.xml.
     
	 possible values are: 
     imperial_recruit
	 aserai_recruit
	 sturgian_recruit
	 vlandian_recruit
	 battanian_volunteer
	 khuzait_nomad
	
	 As of 1.1.0 EliteBasicTroop variants can also be replaced. Here are the values from spcultures.xml
	 imperial_vigla_recruit
	 aserai_youth
	 sturgian_warrior_son
	 vlandian_squire
	 battanian_highborn_youth
	 khuzait_noble_son
	 
	 
	 <target_troop> 
	 Target troops contains the IDs of the recruits from the troop tree you want to inject into the game. 
	 The new troop tree can be of another mod or integrated into this mod but you have to make sure the
	 troop tree is valid and works. The example uses my own Chael Nad'ra troop trees. 
	 HINT: You do NOT need to replace every single tier of units, only the base recruit! That recruit has 
	 to be set to is_base_troop="true" in the troop's XML file so the code can find the root of the troop tree.
	 
	 Target Troop Properties:
	 * percent (0-100): Defines the percentage with which the <target_troop> will replace the <source_troop>
	     If the percentages don't add up to 100% the rest of the percentage will be the chance that the
	     <source_troop> recruits will remain
	 * playeronly (true/false): Means that when AI tries to recruit the new target_troop recruits those recruits 
	     will be changed back to the original <source_troop> recruits! This way you can make some super
	     special troops that only you will command!
	 * cultureonly (true/false) - (requires 1.0.8 or higher): Means that only lords with the same culture as the 
	     <source_troop> will be able to recruit the custom units. If playeronly is set to TRUE cultureonly will 
		 be ignored! 
		 Example: Only a Lord with the Empire culture (<> Kingdom) will be able to recruit custom empire troops. 
		          But that means when the Lord becomes a vassal of the Aserai he will still be able to recruit
				  custom Empire troops because his own culture is still the Empire.
	 * kingdomonly (true/false) - (requires 1.1.0 or higher): Similar to cultureonly but in this case the culture 
	     of the Lords Kingdom will be checked instead of the Lords culture. 
		 Example: An Aserai Lord who is a vassal of the Empire will be able to recruit custom empire troops.
         HINT: If playeronly AND kingdomonly are set to true you and the lords of your kingdom can 
		       recruit the <target_troops>
					  
	   
	   The <debugInfo> values ONLY control the alert output, they do not have any kind of impact
	   on the troop replacement.
-->

<ATCTroops>
	<EnableModScan>true</EnableModScan>
	<debugInfo>
		<troop_replacement>true</troop_replacement>
		<playeronly_flag>false</playeronly_flag>
	</debugInfo>
</ATCTroops>